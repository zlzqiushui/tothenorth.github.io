<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>算法设计与分析</title>
      <link href="/tothenorth.github.io/2023/01/10/%E7%AE%97%E6%B3%95%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%88%86%E6%9E%90/"/>
      <url>/tothenorth.github.io/2023/01/10/%E7%AE%97%E6%B3%95%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%88%86%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<h1 id="第一章-基础知识"><a href="#第一章-基础知识" class="headerlink" title="第一章 基础知识"></a>第一章 基础知识</h1><h2 id="1-1-算法的基本概念"><a href="#1-1-算法的基本概念" class="headerlink" title="1.1 算法的基本概念"></a>1.1 算法的基本概念</h2><h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a><strong>问题</strong></h3><ul><li>需要回答的一般性提问，通常含有若干参数</li><li>需要说明参数的含义和解满足的条件</li><li>对参数进行赋值则得到问题的一个实例</li></ul><hr><h3 id="算法"><a href="#算法" class="headerlink" title="算法"></a><strong>算法</strong></h3><ul><li>由有限条指令构成  </li><li>每条指令规定了计算机所要执行的有限次运算或者操作 </li><li>指令序列确定了解决某个问题的运算或操作的步骤</li><li>算法A解问题P：问题P的任何势力作为算法A的输入，A能够在有限步停机并输出问题的正确解</li></ul><hr><p>是否存在更有效的算法？ 涉及对问题难度的界定。<br>问题本质上的难解性？ NP完全性理论，”P&#x3D;NP?”  </p><hr><h3 id="算法的时间复杂度"><a href="#算法的时间复杂度" class="headerlink" title="算法的时间复杂度"></a><strong>算法的时间复杂度</strong></h3><p>算法的时间复杂度是对算法效率的度量<br>针对问题选择基本运算，用基本运算次数表示算法的效率  </p><p>两个问题：  </p><ul><li>运算次数与实例规模有关<ul><li>算法的时间复杂度函数</li></ul></li><li>规模相同时，运算次数与实例的情况有关<ul><li>最坏情况下的时间复杂度<em><strong>W</strong></em>(n)</li><li>平均情况下的时间复杂度<em><strong>A</strong></em>(n)</li></ul></li></ul><p>什么算法在实践中是可以接受的算法？<br>考察算法在是不是多项式时间的：<br>在最坏情况下，算法的时间复杂度函数在n充分大时以<em><strong>P</strong></em>(n)为上界的算法，<em><strong>P</strong></em>(n)是n的多项式。  </p><p><strong>可求解问题的划分：</strong></p><ul><li>多项式时间可解的问题</li><li>难解的问题</li></ul><hr><h2 id="1-2-算法的伪码描述"><a href="#1-2-算法的伪码描述" class="headerlink" title="1.2 算法的伪码描述"></a>1.2 算法的伪码描述</h2><p>用伪码描述算法，伪码由带标号的指令构成  </p><ul><li>赋值语句：&lt;-</li><li>分支语句：if…then…[else …]  </li><li>循环语句：while，for，repeat until  </li><li>转向语句：goto  </li><li>输出语句：return  </li><li>调用</li><li>注释：&#x2F;&#x2F;</li></ul><hr><h2 id="1-3-算法的数学基础"><a href="#1-3-算法的数学基础" class="headerlink" title="1.3 算法的数学基础"></a>1.3 算法的数学基础</h2><h3 id="1-3-1-函数渐进的界"><a href="#1-3-1-函数渐进的界" class="headerlink" title="1.3.1 函数渐进的界"></a>1.3.1 函数渐进的界</h3><p><strong>定义1.1</strong><br>设 <em>f</em> 和 <em>g</em> 是定义域为自然数集<strong>N</strong>上的函数。  </p><ul><li>若存在正数c和n_0使得对一切n&gt;&#x3D;$n_0$有0&lt;&#x3D;<em>f</em>(n)&lt;&#x3D;c<em>g</em>(n)成立，则称<em>f</em>(n)的渐进上界为<em>g</em>(n),记作<em>f</em>(n)&#x3D;<em>O</em>(<em>g</em>(n)).</li><li>若存在正数c和n_0使得对一切n&gt;&#x3D;$n_0$有0&lt;&#x3D;c<em>g</em>(n)&lt;&#x3D;<em>f</em>(n)成立，则称<em>f</em>(n)的渐进下界为<em>g</em>(n),记作<em>f</em>(n)&#x3D;$\Omega$(<em>g</em>(n)).  </li><li>若存在正数c和n_0使得对一切n&gt;&#x3D;$n_0$有0&lt;&#x3D;<em>f</em>(n)&lt; c<em>g</em>(n)成立，则称<em>f</em>(n)的渐进上界为<em>g</em>(n),记作<em>f</em>(n)&#x3D;<em>o</em>(<em>g</em>(n)).  </li><li>若存在正数c和n_0使得对一切n&gt;&#x3D;$n_0$有0&lt;&#x3D;c<em>g</em>(n)&lt; <em>f</em>(n)成立，则称<em>f</em>(n)的渐进下界为<em>g</em>(n),记作<em>f</em>(n)&#x3D;$\omega$(<em>g</em>(n)).</li><li>若<em>f</em>(n)&#x3D;<em>O</em>(<em>g</em>(n))且<em>f</em>(n)&#x3D;$\Omega$(<em>g</em>(n)),则记作<em>f</em>(n)&#x3D;$\Theta$(<em>g</em>(n)).  此时也城<em>g</em>(n)是<em>f</em>(n)的渐进的紧的界，或者称<em>f</em>(n)的阶是<em>g</em>(n).此时<em>f</em>(n)与<em>g</em>(n)的阶相等.</li></ul><p><em>O</em>(1)表示常数函数  </p><p><strong>定理1.1</strong><br>设 <em>f</em> 和 <em>g</em> 是定义域为自然数集<strong>N</strong>上的函数。</p><ul><li><p>如果$\lim_{n\rightarrow+\infty}\frac{f(n)}{g(n)}$存在，并且等于某个常数c&gt;0,那么<em>f</em>(n)&#x3D;$\Theta$(<em>g</em>(n)).  </p></li><li><p>如果$\lim_{n\rightarrow+\infty}\frac{f(n)}{g(n)}$&#x3D;0,那么<em>f</em>(n)&#x3D;<em>o</em>(<em>g</em>(n)).  </p></li><li><p>如果$\lim_{n\rightarrow+\infty}\frac{f(n)}{g(n)}$&#x3D;$+\infty$,那么<em>f</em>(n)&#x3D;$\omega$(<em>g</em>(n)).</p></li></ul><p><strong>定理1.2</strong><br>设 <em>f</em> ，<em>g</em> ，<em>h</em> 是定义域为自然数集合的函数，  </p><ul><li>如果 <em>f</em>&#x3D;<em>O</em>(<em>g</em>)且 <em>g</em>&#x3D;<em>O</em>(<em>h</em>),那么 <em>f</em>&#x3D;<em>O</em>(<em>h</em>).</li><li>如果 <em>f</em>&#x3D;$\Omega$(<em>g</em>)且 <em>g</em>&#x3D;$\Omega$(<em>h</em>),那么 <em>f</em>&#x3D;$\Omega$(<em>h</em>).</li><li>如果 <em>f</em>&#x3D;$\Theta$(<em>g</em>)且 <em>g</em>&#x3D;$\Theta$(<em>h</em>),那么 <em>f</em>&#x3D;$\Theta$(<em>h</em>).</li></ul><p><strong>定理1.3</strong><br>假设 <em>f</em> 和 <em>g</em> 是定义域为自然数集合的函数，若对某个其他的函数 <em>h</em>有 <em>f</em>&#x3D;<em>O</em>(<em>h</em>)和 <em>g</em>&#x3D;<em>O</em>(<em>h</em>),那么<em>f</em>+<em>g</em>&#x3D;<em>O</em>(<em>h</em>).</p><p><strong>推论</strong><br>假设 <em>f</em> 和 <em>g</em> 是定义域为自然数集合的函数，且满足 <em>g</em>&#x3D;<em>O</em>(<em>f</em>),那么 <em>f</em>+<em>g</em>&#x3D;$\Theta$(<em>f</em>).  </p><hr><h4 id="多项式函数"><a href="#多项式函数" class="headerlink" title="多项式函数"></a><strong>多项式函数</strong></h4><p>d次多项式函数 <em>f</em>(n)&#x3D;$\Theta$($n^d$)<br>ps: <em>O</em>($nlogn$)也是多项式时间的  </p><hr><h4 id="对数函数"><a href="#对数函数" class="headerlink" title="对数函数"></a><strong>对数函数</strong></h4><p>对数运算满足<br>$a^{log_bn}$ &#x3D; $n^{log_ba}$<br>该等式说明某些函数表面上n处在指数位置，但仍是多项式函数。<br>对数函数增长非常慢，任何幂函数($\alpha$&gt;0)的阶都比对数函数(<em>b</em>&gt;1)的阶高。</p><p><strong>定理1.4</strong><br>对每一个<em>b</em>&gt;1和每个$\alpha$&gt;0,有 $log_bn$&#x3D;<em>o</em>($n^{\alpha}$).  </p><p>对数函数的另一条性质是换底公式  </p><p>$log_an$&#x3D;$\frac{log_bn}{log_ba}$  </p><p>根据此性质可知，$log_an$&#x3D;$\Theta$($log_bn$).  </p><hr><h4 id="指数函数"><a href="#指数函数" class="headerlink" title="指数函数"></a><strong>指数函数</strong></h4><p><strong>定理1.5</strong><br>对每个<em>r</em>&gt;1和每个<em>d</em>&gt;0,有$n^d$&#x3D;<em>o</em>($r^n$).  </p><hr><h4 id="阶乘函数"><a href="#阶乘函数" class="headerlink" title="阶乘函数"></a><strong>阶乘函数</strong></h4><p>Stirling公式<br>n!&#x3D;$\sqrt{2\pi n}$ $(\frac{n}{e})^n$(1+$\Theta(\frac{1}{n})$)  </p><p>关于阶乘函数有下面的结果  </p><ul><li>n!&#x3D;<em>o</em>($n^n$) </li><li>n!&#x3D;$\omega$($2^n$)  </li><li>$log(n!)$&#x3D;$\Theta$($nlog(n)$)</li></ul><hr><h3 id="1-3-2-求和的方法"><a href="#1-3-2-求和的方法" class="headerlink" title="1.3.2 求和的方法"></a>1.3.2 求和的方法</h3><p>算法分析中如果遇到循环，经常需要对循环中各次迭代的运算次数求和，这就用到的序列求和的方法。<br>常见的序列是</p><ul><li>等差级数  </li><li>等比级数  </li><li>调和级数<ul><li>$\sum_{k&#x3D;1}^n \frac{1}{k}$ &#x3D; $lnn$ + <em>O</em>(1)</li></ul></li></ul><p>对于有些求和公式，求不出精确的值，但可以估计和式的上界  </p><ul><li>放大法<ul><li>用序列中的最大项代替序列中的每个项 </li><li>等比级数，假设存在常数r&lt;1,使得$a_{k+1}-a_k \leq r$对一切$k\ge r$成立</li></ul></li><li>积分法<ul><li>调和级数的和可以用积分作为它的渐进的界<br>  上下界积分分别是<blockquote><p>下界：$ln{(n+1)}$<br>上界：$lnn+1$</p></blockquote></li></ul></li></ul><hr><h3 id="1-3-3-递归方程求解方法"><a href="#1-3-3-递归方程求解方法" class="headerlink" title="1.3.3 递归方程求解方法"></a>1.3.3 递归方程求解方法</h3><p>递归算法的分析离不开递归方程的求解  </p><p><strong>定义1.2</strong><br>设序列$a_0,a_1,…，a_n,…,$简记为{${a_n}$},一个把$a_n$与某些个$a_i$联系起来的等式叫做关于序列{$a_n$}的<strong>递推方程</strong>.  </p><p>方法：  </p><ul><li>迭代归纳法，适用于一阶的递推方程  </li><li>二阶以上需要进行化简，然后再进行迭代</li></ul><h4 id="递归树"><a href="#递归树" class="headerlink" title="递归树"></a><strong>递归树</strong></h4><p>&amp;emsp;&amp;emsp;递归树是一颗节点带权的二叉树，初始的递归树只有一个节点，权标记为<em>W</em>(n).然后不断进行迭代，直到树中不再含有权为函数的节点位置.迭代过程中，全部节点的权值之和不变，总是等于函数<em>W</em>(n).  </p><p>&amp;emsp;&amp;emsp;估算递推方程解的阶，也可以使用尝试的方法.  </p><p><strong>定理1.6 主定理(MasterTheorem)</strong><br>&amp;emsp;&amp;emsp;设 $a\geq1$ ,$b&gt;1$为常数，<em>f</em>(n)为函数，<em>T</em>(n)为非负整数，且<br>&amp;emsp;&amp;emsp;&amp;emsp;$T(n) &#x3D; aT(n&#x2F;b) + f(n)$<br>则有以下结果：  </p><ul><li>若$f(n)&#x3D;O(n^{log_ba-\varepsilon}),\varepsilon&gt;0,$那么$T(n)&#x3D;\Theta(n^{log_ba})$  </li><li>若$f(n)&#x3D;\Theta(n^{log_ba}),$那么$T(n)&#x3D;\Theta(n^{log_ba}logn)$  </li><li>若$f(n)&#x3D;\Omega(n^{log_ba+\varepsilon}),\varepsilon&gt;0,$且对某个常数$c&lt;1$和所以充分大的$n$有$af(n&#x2F;b)\leq cf(n),$那么$T(n)&#x3D;\Theta(f(n))$</li></ul><hr>]]></content>
      
      
      <categories>
          
          <category> Algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Algorithm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>诗歌</title>
      <link href="/tothenorth.github.io/2023/01/10/%E8%AF%97%E6%AD%8C/"/>
      <url>/tothenorth.github.io/2023/01/10/%E8%AF%97%E6%AD%8C/</url>
      
        <content type="html"><![CDATA[<blockquote><p><strong>我用什么才能留住你</strong><br>我用什么才能留住你<br>我给你萧索的街道、绝望的落日、荒郊的月亮。<br>我给你一个久久地望着孤月的人的悲哀。<br>我给你我已死去的祖辈，后人们用大理石祭奠的先魂<br>我父亲的父亲，阵亡于布宜诺斯艾利斯的边境，<br>两颗子弹射穿了他的胸膛，死的时候蓄着胡子，尸体被士兵们用牛皮裹起；<br>我母亲的祖父——那年才二十四岁——在秘鲁率领三百人冲锋，<br>如今都成了消失的马背上的亡魂。<br>我给你我的书中所能蕴含的一切悟力，<br>以及我生活中所能有的男子气概和幽默。<br>我给你一个从未有过信仰的人的忠诚。<br>我给你我设法保全的我自己的核心<br>——不营字造句，不和梦交易，<br>不被时间、欢乐和逆境触动的核心。<br>我给你早在你出生前多年的一个傍晚看到的一朵黄玫瑰的记忆。<br>我给你关于你生命的诠释，<br>关于你自己的理论，<br>你的真实而惊人的存在。<br>我给你我的寂寞、我的黑暗、我心的饥渴；<br>我试图用困惑、危险、失败来打动你。<br>1934 Jorge Luis Borges</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> poetry </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CET6乱序版</title>
      <link href="/tothenorth.github.io/2023/01/10/CET6%E4%B9%B1%E5%BA%8F%E7%89%88/"/>
      <url>/tothenorth.github.io/2023/01/10/CET6%E4%B9%B1%E5%BA%8F%E7%89%88/</url>
      
        <content type="html"><![CDATA[<h1 id="Word-List-1"><a href="#Word-List-1" class="headerlink" title="Word List 1"></a>Word List 1</h1><ul><li><em><strong>author</strong></em></li><li><em><strong>accord</strong></em><blockquote><p>n. 一致，符合；协议<br>vi. 符合，一致<br>vt. 授予，赠予，给予</p></blockquote></li><li><em><strong>benefit</strong></em><blockquote><p>n. 益处；优势；救济金；保险金；津贴<br>vt. 有益于<br>vi. 得益于</p></blockquote></li><li><em><strong>economic</strong></em></li><li><em><strong>issue</strong></em><blockquote><p>n. 问题；发行；分发<br>vt. 发行；分发；发布</p></blockquote></li><li><em><strong>impact</strong></em><blockquote><p>n. 影响，作用；冲击<br>v. 影响；冲击</p></blockquote></li><li><em><strong>consumer</strong></em></li><li><em><strong>focus</strong></em><blockquote><p>n. 焦点，中心<br>v. 聚焦，注视</p></blockquote></li><li><em><strong>climate</strong></em></li><li><em><strong>concern</strong></em></li><li><em><strong>environment</strong></em></li><li><em><strong>challenge</strong></em></li><li><em><strong>positive</strong></em></li><li><em><strong>process</strong></em></li><li><em><strong>culture</strong></em></li><li><em><strong>community</strong></em></li><li><em><strong>project</strong></em><blockquote><p>n. 方案，计划；课题；项目，工程<br>v. 伸出；投射，放映；预计，推断；规划</p></blockquote></li><li><em><strong>academic</strong></em><blockquote><p>n. 大学教师<br>adj. 学院的；学术的；纯理论的；不切实际的</p></blockquote></li><li><em><strong>medium</strong></em><blockquote><p>n. 媒介，媒质，传导体<br>adj. 中等的</p></blockquote></li><li><em><strong>design</strong></em></li><li><em><strong>demand</strong></em></li><li><em><strong>mental</strong></em></li><li><em><strong>negative</strong></em></li><li><em><strong>species</strong></em><blockquote><p>n. 种，物种</p></blockquote></li><li><em><strong>decade</strong></em><blockquote><p>n. 十年，十年期</p></blockquote></li><li><em><strong>involve</strong></em><blockquote><p>vt. 使卷入，牵涉；包含，含有；使参与</p></blockquote></li><li><em><strong>remain</strong></em></li><li><em><strong>individual</strong></em></li><li><em><strong>economy</strong></em></li><li><em><strong>expert</strong></em><blockquote><p>n. 专家<br>adj. 熟练的</p></blockquote></li><li><em><strong>compare</strong></em></li><li><em><strong>communication</strong></em></li><li><em><strong>account</strong></em><blockquote><p>n. 记述；解释；账目<br>vi. 说明……，占……</p><blockquote><p>account for 解释，说明,占<br>on account of 由于，为了<br>on no account 绝不可以</p></blockquote></blockquote></li></ul>]]></content>
      
      
      <categories>
          
          <category> English </category>
          
      </categories>
      
      
        <tags>
            
            <tag> English </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CET6</title>
      <link href="/tothenorth.github.io/2023/01/09/CET6/"/>
      <url>/tothenorth.github.io/2023/01/09/CET6/</url>
      
        <content type="html"><![CDATA[<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><hr><ul><li>猫概怎么还不出分？？？</li><li>现汉怎么还不出分？？？</li></ul><hr><p><font color="#8319322">qysm</font></p><p><em><strong>google</strong></em></p><hr><hr><p><del>niubi</del></p><p><u>下划线</u>666</p><ul><li>qy</li><li>qy</li></ul><ol><li></li><li>第二项:<ul><li>6</li><li>6<blockquote><p>qysm<br>sm<br>sm</p></blockquote></li></ul></li></ol><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">function</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span>  </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> a;</span><br><span class="line">    <span class="type">int</span> b;</span><br><span class="line">    <span class="keyword">return</span> a+b;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>this is a link <a href="https://www.runoob.com/">qysb</a></p><p><a href="http://www.runoob.com/">http://www.runoob.com</a></p><p>*6</p><p><img src="http://http//static.runoob.com/images/runoob-logo.png" alt="alt png"></p><p>$$<br>\begin{Bmatrix}<br>    a &amp; b \<br>    c &amp; d<br>\end{Bmatrix}<br>$$</p>]]></content>
      
      
      <categories>
          
          <category> English </category>
          
      </categories>
      
      
        <tags>
            
            <tag> English </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/tothenorth.github.io/2023/01/08/hello-world/"/>
      <url>/tothenorth.github.io/2023/01/08/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
